---
import Layout from "../layouts/Layout.astro"
import PhotoIcon from "../components/icons/PhotoIcon.astro"
import SectionContainer from "../components/SectionContainer.astro"
import ChevronRigth from "../components/icons/ChevronRigth.astro"

import { addCartItem, cartItems } from "../stores/cartStore";
---

<Layout title="Agrega foto y dedicatoria">
    <main class="flex flex-col w-full justify-center items-center text-center px-4 pt-20 space-y-10">
        <SectionContainer>
            <div class="flex flex-col items-center justify-center space-y-14">
                <div>
                    <h2 class="text-2xl font-semibold">Agrega la foto que deseas enviar a esa persona especial</h2>
                    <p class="text-2xl font-semibold">por solo $1000</p>
                </div>

                <div class="w-56 flex items-center justify-center gap-2 py-3 bg-gradient-to-r from-purple-900 via-purple-800 to-purple-700 rounded-xl font-bold">
                    <button id="uploadButton" class="">
                        Seleccionar foto
                    </button>
                    <PhotoIcon class="size-6" />
                </div>
            </div>
    
            <!-- Input oculto para seleccionar la foto -->
            <input type="file" id="fileInput" accept="image/*" class="hidden" />
            
            <!-- Donde se mostrará la foto seleccionada -->
            <div class="">
                <img id="preview" src="" alt="Previsualización de la imagen" class="hidden w-48 h-48 object-cover rounded-lg" />
            </div>
        </SectionContainer>

        <section id="message-container" class="hidden">
            <div class="-space-y-1">
                <div class="space-y-2">
                    <h2 class="text-2xl font-semibold">Escribe tu mensaje a dedicar</h2>
                <textarea id="message" placeholder="Escribe tu dedicatoria" maxlength="40" class="w-full h-24 p-4 rounded-lg border-2 border-gray-300 focus:border-purple-800 focus:outline-none"></textarea>
                </div>
                
                <p id="charCount" class="text-xs text-gray-400 text-right">40 caracteres restantes</p>
            </div>
        </section>

        <div id="continue-without-photo">
            <button><a href="/data" class="bg-gradient-to-r from-purple-800 via-purple-700 to-purple-600 text-transparent bg-clip-text font-bold">Continuar sin foto</a></button>
        </div>

        <section id="bottom-sheet" class="md:w-3/5 w-full sticky bottom-5 flex flex-col justify-center gap-y-4 p-4 rounded-3xl bg-neutral-950/70 backdrop-blur-lg shadow-xl shadow-black ease-out transition-all translate-y-24 opacity-0 ">
            <div class="flex flex-row items-center justify-center">
                <div class="flex flex-col w-full justify-between gap-1">
                    <div class="flex flex-row items-center justify-between text-xs font-semibold text-gray-300">
                        <p class="">Rosas seleccionadas: </p>
                        <span id="total-roses"></span>
                    </div>

                    <div class="flex flex-row items-center justify-between text-xs font-semibold text-gray-300">
                        <p class="text-xs font-semibold text-gray-300">Total a pagar por las rosas: </p>
                        <div class="flex flex-row">
                            <p>$</p>
                            <span id="total-roses-to-pay"></span>
                        </div>
                    </div>

                    <div class="flex flex-row items-center justify-between text-xs font-semibold text-gray-300">
                        <p class="text-xs font-semibold text-gray-300">Foto con dedicatoria: </p>
                        <span>$1000</span>
                    </div>
                </div>
            </div>

            <div class="flex flex-row items-center justify-between font-bold">
                <p class="">Total:</p>
                <div class="flex flex-row">
                    <p>$</p>
                    <span id="total-to-pay"></span>
                </div>
            </div>

            <div class="flex justify-around items-center">
                <div>
                    <button id="button-without-foto"><a href="/data" class="bg-gradient-to-r from-purple-800 via-purple-700 to-purple-600 text-transparent bg-clip-text font-bold">Continuar sin foto</a></button>
                </div>
                <div>
                    <button><a href="/data" class="flex items-center justify-center py-3 px-5 bg-gradient-to-r from-purple-950 via-purple-900 to-purple-950 rounded-xl font-bold">Continuar<ChevronRigth class="size-6"/></a></button>
                </div>
            </div>
		</section>
    </main>
</Layout>

<script>
    import { addCartItem, cartItems, updateCart } from "../stores/cartStore";

    const uploadButton = document.getElementById('uploadButton') as HTMLButtonElement;
    const fileInput = document.getElementById('fileInput') as HTMLInputElement;
    const preview = document.getElementById('preview') as HTMLImageElement;
    const messageContainer = document.getElementById('message-container') as HTMLElement;
    const message = document.getElementById('message') as HTMLTextAreaElement;
    const bottomSheet = document.getElementById('bottom-sheet') as HTMLElement;
    const continueWithoutPhoto = document.getElementById('continue-without-photo') as HTMLElement;
    const charCount = document.getElementById('charCount') as HTMLParagraphElement;
    const totalOfRoses = document.getElementById("total-roses") as HTMLElement;
    const totalOfRosesToPay = document.getElementById("total-roses-to-pay") as HTMLElement;
    const totalToPayElement = document.getElementById("total-to-pay") as HTMLElement;
    const buttonWithoutFoto = document.getElementById('button-without-foto') as HTMLButtonElement;

    const maxChars = 40; // Límite máximo de caracteres para el mensaje
    let photoDataUrl = "";

    const currentCart = cartItems.get(); // Obtener el carrito del estado global
    const currentItem = currentCart.find(item => item.title === "Rosa con dedicatoria");

    if (currentItem?.message) {
      message.value = currentItem?.message || ""; // Cargar el mensaje del carrito
    }

    if (currentItem?.photo) {
        photoDataUrl = currentItem?.photo || "" // Cargar la foto del carrito
        preview.src = photoDataUrl; 
        preview.classList.remove('hidden'); 
        uploadButton.textContent = 'Cambiar foto'; 
        messageContainer.classList.remove('hidden');
    }

    continueWithoutPhoto.addEventListener('click', () => {
        deletePhotoAndMessage();
    });

    buttonWithoutFoto.addEventListener('click', () => {
        deletePhotoAndMessage();
    });

    // Abrir la interfaz de selección de archivos al hacer clic en el botón
    uploadButton.addEventListener('click', () => {
        fileInput.click(); // Simula un clic en el input de archivo
    });

    // Mostrar la imagen seleccionada en el preview
    fileInput.addEventListener('change', (event) => {
        const input = event.target as HTMLInputElement; 

        if (input.files && input.files[0]) { 
            const file = input.files[0]; 
            const reader = new FileReader(); 
            reader.onload = function(e) {
                preview.src = e.target?.result as string; 
                photoDataUrl = preview.src; 
                preview.classList.remove('hidden'); // Mostrar el preview de la imagen
                uploadButton.textContent = 'Cambiar foto'; // Cambiar el texto del botón
                messageContainer.classList.remove('hidden'); // Mostrar el contenedor de mensaje
                savePhotoAndMessage(); // Guardar la foto y el mensaje en el estado global
                checkInputs();
            };

            reader.readAsDataURL(file); 
        }
    });

    // Actualizar el contador de caracteres cuando el usuario escribe en el textarea
    message.addEventListener('input', () => {
        const remainingChars = maxChars - message.value.length;

        // Fijar el contador en 0 si excede el límite
        if (remainingChars <= 0) {
            charCount.textContent = `0 caracteres restantes`;
            message.value = message.value.substring(0, maxChars); 
            charCount.classList.add("text-red-500");
        } else {
            charCount.textContent = `${remainingChars} caracteres restantes`;
            charCount.classList.remove("text-red-500");
        }

        savePhotoAndMessage(); 
        checkInputs(); 
    });

    function savePhotoAndMessage() {
        const currentMessage = message.value; 

        addCartItem({
            title: "Rosa con dedicatoria",
            quantity: 1,
            photo: photoDataUrl, 
            message: currentMessage // Guardar el mensaje vacío si es el caso
        });
    }

    function deletePhotoAndMessage() {
        const index = currentCart.findIndex(item => item.title === "Rosa con dedicatoria");
        currentCart.splice(index, 1);
        updateCart(currentCart);
    }

    // Función para verificar si mostrar el Bottom Sheet
    function checkInputs() { 
        const currentCart = cartItems.get(); // Obtener el carrito del estado global
        const currentItem = currentCart.find(item => item.title === "Rosa con dedicatoria");
        
        // Comprobar que el mensaje no está vacío y la imagen ha sido seleccionada (el preview no tiene la clase 'hidden')
        if (message.value !== '' && !preview.classList.contains('hidden')) {
            // Mostrar el Bottom Sheet
            bottomSheet.classList.remove("opacity-0");
            bottomSheet.classList.remove("translate-y-24");
            bottomSheet.classList.add("translate-y-0");

            continueWithoutPhoto.classList.add("hidden"); // Ocultar la opción de continuar sin foto
            calculateTotalToPayForRoses(); // Recalcular el total después de agregar el pedido
            calculateTotal(); // Recalcular el total después de agregar el pedido
        } else { 
            // Ocultar el Bottom Sheet
            bottomSheet.classList.remove("translate-y-0");
            bottomSheet.classList.add("translate-y-24");
            bottomSheet.classList.add("opacity-0");

            continueWithoutPhoto.classList.remove("hidden"); // Mostrar la opción de continuar sin foto
        }
    }

    function calculateTotalToPayForRoses() {
        // Obtenemos el carrito desde la tienda global
        const currentCart = cartItems.get();

        // Calculamos el total de rosas seleccionadas
        const totalRoses = currentCart.reduce((acc, pedido) => acc + pedido.quantity, 0);
        let totalToPay = 0;

        if (totalRoses >= 3) {
            // Dividir el total de rosas en lotes de 3
            const fullSetsOfThree = Math.floor(totalRoses / 3); 
            const remainingRoses = totalRoses % 3; 
            
            // 5000 por cada conjunto de 3 rosas
            totalToPay = fullSetsOfThree * 5000;
            
            // 2000 por cada rosa adicional fuera del múltiplo de 3
            totalToPay += remainingRoses * 2000;
        } else {
            // Si el usuario ha seleccionado menos de 3 rosas, aplicar precio normal
            totalToPay = totalRoses * 2000;
        }

        // Actualizamos los valores en la UI
        totalOfRoses.innerHTML = totalRoses.toString();
        totalOfRosesToPay.innerHTML = totalToPay.toString();
    }

    function calculateTotal() {
        // Obtenemos el carrito desde la tienda global
        const currentCart = cartItems.get();

        // Calculamos el total de rosas seleccionadas
        const totalRoses = currentCart.reduce((acc, pedido) => acc + pedido.quantity, 0);
        let totalToPay = 0;
        const photoCost = 1000;

        if (totalRoses >= 3) {
            // Dividir el total de rosas en lotes de 3
            const fullSetsOfThree = Math.floor(totalRoses / 3); 
            const remainingRoses = totalRoses % 3; 
            
            // 5000 por cada conjunto de 3 rosas
            totalToPay = fullSetsOfThree * 5000;
            
            // 2000 por cada rosa adicional fuera del múltiplo de 3
            totalToPay += remainingRoses * 2000;
        } else {
            // Si el usuario ha seleccionado menos de 3 rosas, aplicar precio normal
            totalToPay = totalRoses * 2000;
        }

        // Actualizamos los valores en la UI
        totalOfRoses.innerHTML = totalRoses.toString();
        totalToPayElement.innerHTML = (totalToPay + photoCost).toString();
    }
    
    checkInputs();
</script>
